name: CD Pipeline - Deploy to MicroK8s via ArgoCD and Helm
on:
  workflow_dispatch:
    paths:
      - charts/**
      - argocd/**
jobs:
  cd-deploy:
    name: Continuous Deployment to MicroK8s
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Sync kubeconfig from MicroK8s VM
        run: |
          mkdir -p ~/.kube
          multipass exec microk8s-vm -- microk8s config > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl get nodes
      - name: Verify kube context
        run: |
          kubectl config current-context
          kubectl cluster-info
      - name: Install ArgoCD CLI
         run: |
          set -e
          ARCH=$(uname -m)
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')

          echo "Detected OS: $OS, Arch: $ARCH"

    # Pick correct binary
          if [[ "$OS" == "darwin" && "$ARCH" == "arm64" ]]; then
            URL="https://github.com/argoproj/argo-cd/releases/latest/download/argocd-darwin-arm64"
          elif [[ "$OS" == "darwin" ]]; then
            URL="https://github.com/argoproj/argo-cd/releases/latest/download/argocd-darwin-amd64"
          else
            URL="https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64"
          fi

          echo "Downloading ArgoCD CLI from: $URL"
          curl -sSL -o /tmp/argocd $URL
          chmod +x /tmp/argocd

    # Install to a writable path (no sudo needed)
          mkdir -p ~/.local/bin
          mv /tmp/argocd ~/.local/bin/argocd
          export PATH="$HOME/.local/bin:$PATH"

          echo "Verifying installation..."
          argocd version --client

      - name: Log in to ArgoCD
        run: |
         argocd login ${{ secrets.ARGOCD_SERVER }} \
          --username admin \
          --password "${{ secrets.ARGOCD_PASSWORD }}" \
          --insecure

      - name: Apply ArgoCD application manifest
        run: |
          kubectl apply -f argocd/app.yaml
          echo "ArgoCD Application manifest applied."
      - name: Sync and Wait for Application
        run: |
          argocd app sync demo-app --timeout 300
          argocd app wait demo-app --health --timeout 300
      - name: Verify deployment in MicroK8s
        run: |
          kubectl get pods -n demo-app
          kubectl get svc -n demo-app
          kubectl get ingress -n demo-app

