name: CD - Deploy to microk8s
runs-on: [self-hosted, k8s-deployer]


steps:
- name: Checkout
  uses: actions/checkout@v4


- name: Ensure kubectl is available
  run: |
   kubectl version --client


- name: Ensure helm is available
  run: |
   helm version


- name: Install / Upgrade ArgoCD into cluster
  run: |
   kubectl create ns argocd --dry-run=client -o yaml | kubectl apply -f -
   helm repo add argo https://argoproj.github.io/argo-helm
   helm repo update
   helm upgrade --install argocd argo/argo-cd -n argocd \
     --set server.service.type=ClusterIP \
     --wait --timeout 5m


- name: Install External Secrets Operator (optional)
  run: |
   helm repo add external-secrets https://charts.external-secrets.io
   helm repo update
   kubectl create ns external-secrets --dry-run=client -o yaml | kubectl apply -f -
   helm upgrade --install external-secrets external-secrets/external-secrets -n external-secrets --wait --timeout 5m


- name: Install Vault (dev mode) using Helm
  run: |
    kubectl create ns vault --dry-run=client -o yaml | kubectl apply -f -
    helm repo add hashicorp https://helm.releases.hashicorp.com
    helm repo update
    helm upgrade --install vault hashicorp/vault -n vault \
     --wait --timeout 5m \
     --values infra/vault/vault-helm-values.yaml


- name: Deploy MSSQL for local dev
  run: |
    kubectl apply -f infra/mssql/mssql-statefulset.yaml


- name: Create Vault root token secret (dev only) and run Vault init Job
  run: |
    # vault helm values sets devRootToken in a secret name `vault-root` in the vault ns
    kubectl apply -f infra/vault/vault-token-secret.yaml || true
    kubectl apply -f infra/vault/vault-init-job.yaml
    # Wait for job completion
    kubectl -n vault wait --for=condition=complete job/vault-init --timeout=120s || true
    kubectl -n vault get job,vault,svc


- name: Create ArgoCD Application for java-backend
  run: |
   kubectl apply -f infra/argocd/app-java-backend.yaml


- name: Sync ArgoCD Application (force)
  run: |
    kubectl -n argocd run -i --rm argocd-cli --image=argoproj/argocd:v2.8.3 --restart=Never -- \

  sh -c "argocd --help || true"

- name: Show pods
  run: |
   kubectl get pods --all-namespaces -o wide
